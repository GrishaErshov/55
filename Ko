import java.util.ArrayList;
import java.util.Scanner;
import java.time.Instant;

class Plant {
    private int id;
    private String name;
    private String description;
    private int harvestTime;

    public Plant(int id, String name, String description, int harvestTime) {
        this.id = id;
        this.name = name;
        this.description = description;
        this.harvestTime = harvestTime;
    }

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public String getDescription() {
        return description;
    }

    public int getHarvestTime() {
        return harvestTime;
    }

    public void setHarvestTime(int harvestTime) {
        this.harvestTime = harvestTime;
    }
}

public class GardenApp {
    public static void main(String[] args) {
        ArrayList<Plant> garden = new ArrayList<>();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Садовод Меню:");
            System.out.println("1. Просмотр рассады");
            System.out.println("2. Добавить растение");
            System.out.println("3. Выход из программы");
            System.out.print("Выберите действие: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    System.out.println("Список рассады:");
                    for (Plant plant : garden) {
                        System.out.println("ID: " + plant.getId() + ", Имя: " + plant.getName() + ", Описание: " + plant.getDescription() + ", Время сбора урожая: " + plant.getHarvestTime() + " дней");
                    }
                    break;
                case 2:
                    System.out.print("Введите ID растения: ");
                    int id = scanner.nextInt();
                    scanner.nextLine();
                    System.out.print("Введите имя растения: ");
                    String name = scanner.nextLine();
                    System.out.print("Введите описание растения: ");
                    String description = scanner.nextLine();
                    System.out.print("Введите время сбора урожая (в днях): ");
                    int harvestTime = scanner.nextInt();
                    garden.add(new Plant(id, name, description, harvestTime));
                    System.out.println("Растение успешно добавлено в рассаду.");
                    break;
                case 3:
                    System.out.println("Выход из программы.");
                    System.exit(0);
                    break;
                default:
                    System.out.println("Некорректный выбор, попробуйте снова.");
            }
        }
    }

    public long calculateDeltaTime(int harvestTime) {
        long currentTime = Instant.now().toEpochMilli();
        long harvestTimeInMillis = harvestTime * 24 * 60 * 60 * 1000;
        return harvestTimeInMillis - currentTime;
    }
}





////////////////

break;
                case 3:
                    System.out.println("Выход из программы.");
                    System.exit(0);
                    break;
                default:
                    System.out.println("Некорректный выбор, попробуйте снова.");
            }
        }
    }

    public long calculateDeltaTime(int harvestTime) {
        long currentTime = Instant.now().toEpochMilli();
        long harvestTimeInMillis = harvestTime * 24 * 60 * 60 * 1000;
        return harvestTimeInMillis - currentTime;
    }
}





/////////////
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Plant {
    private int id;
    private String name;
    private String description;
    private String harvestTime;

    public Plant(int id, String name, String description, String harvestTime) {
        this.id = id;
        this.name = name;
        this.description = description;
        this.harvestTime = harvestTime;
    }

    public String toString() {
        return "ID: " + id + ", Name: " + name + ", Description: " + description + ", Harvest Time: " + harvestTime;
    }
}

public class GardenApp {
    static List<Plant> plants = new ArrayList<>();

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Menu:");
            System.out.println("1. View Plants");
            System.out.println("2. Add Plant");
            System.out.println("3. Exit");

            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    viewPlants();
                    break;
                case 2:
                    addPlant();
                    break;
                case 3:
                    System.out.println("Exiting program...");
                    System.exit(0);
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    public static void viewPlants() {
        if (plants.size() == 0) {
            System.out.println("No plants in the garden.");
        } else {
            System.out.println("Plants in the garden:");
            for (Plant plant : plants) {
                System.out.println(plant);
            }
        }
    }

    public static void addPlant() {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Enter ID for the plant:");
        int id = scanner.nextInt();

        System.out.println("Enter name of the plant:");
        String name = scanner.next();

        System.out.println("Enter description of the plant:");
        String description = scanner.next();

        System.out.println("Enter harvest time for the plant:");
        String harvestTime = scanner.next();

        Plant newPlant = new Plant(id, name, description, harvestTime);
        plants.add(newPlant);

        System.out.println("Plant added successfully.");
    }
}




///////////////////////
import java.util.ArrayList;
import java.util.List;

class Food {
    private int id;
    private String name;
    private String description;

    public Food(int id, String name, String description) {
        this.id = id;
        this.name = name;
        this.description = description;
    }

    // getters and setters
}

public class Main {
    public static void main(String[] args) {
        List<Food> foods = new ArrayList<>();

        // Добавление 100000 сущностей
        for (int i = 0; i < 100000; i++) {
            foods.add(new Food(i, "Food" + i, "Description" + i));
        }

        // Добавление 1 элемента в начало
        foods.add(0, new Food(100001, "New Food at Beginning", "New Description at Beginning"));

        // Добавление 1 элемента в середину
        foods.add(foods.size() / 2, new Food(100002, "New Food at Middle", "New Description at Middle"));

        // Добавление 1 элемента в конец
        foods.add(new Food(100003, "New Food at End", "New Description at End"));

        // Удаление 1 элемента
        foods.remove(foods.size() / 2);

        // Модификация 1 элемента в начале
        Food foodAtBeginning = foods.get(0);
        foodAtBeginning.setName("Modified Name at Beginning");
        foodAtBeginning.setDescription("Modified Description at Beginning");

        // Модификация 1 элемента в середине
        Food foodAtMiddle = foods.get(foods.size() / 2);
        foodAtMiddle.setName("Modified Name at Middle");
        foodAtMiddle.setDescription("Modified Description at Middle");

        // Модификация 1 элемента в конце
        Food foodAtEnd = foods.get(foods.size() - 1);
        foodAtEnd.setName("Modified Name at End");
        foodAtEnd.setDescription("Modified Description at End");

        // Вывод элементов
        for (Food food : foods) {
            System.out.println("Id: " + food.getId() + ", Name: " + food.getName() + ", Description: " + food.getDescription());
        }
    }
}
